def length_of_longest_substring(s: str) -> int:
    char_index_map = {}
    left = 0  # Start of the current substring
    max_length = 0
    
    for right in range(len(s)):
        # If the character is already in the substring
        if s[right] in char_index_map and char_index_map[s[right]] >= left:
            # Move the left pointer to the right of the last occurrence
            left = char_index_map[s[right]] + 1
        
        # Update the last seen index of the character
        char_index_map[s[right]] = right
        
        # Calculate the length of the current substring
        current_length = right - left + 1
        max_length = max(max_length, current_length)
    
    return max_length

# Example test case
s = "abcabcbb"
print(length_of_longest_substring(s))  # Output: 3 (The longest substring is "abc")
